//
// Generated by protoc, do not edit by hand.
//
package org.fusesource.hawtbuf.proto;

public class UnittestImport {

   public static enum ImportEnum {

      IMPORT_FOO("IMPORT_FOO", 7),
      IMPORT_BAR("IMPORT_BAR", 8),
      IMPORT_BAZ("IMPORT_BAZ", 9);

      private final String name;
      private final int value;

      private ImportEnum(String name, int value) {
         this.name = name;
         this.value = value;
      }

      public final int getNumber() {
         return value;
      }

      public final String toString() {
         return name;
      }

      public static ImportEnum valueOf(int value) {
         switch (value) {
         case 7:
            return IMPORT_FOO;
         case 8:
            return IMPORT_BAR;
         case 9:
            return IMPORT_BAZ;
         default:
            return null;
         }
      }

   }


   static public final class ImportMessage extends ImportMessageBase<ImportMessage> {

      public java.util.ArrayList<String> missingFields() {
         java.util.ArrayList<String> missingFields = super.missingFields();
         return missingFields;
      }

      public void clear() {
         super.clear();
         clearD();
      }

      public ImportMessage clone() {
         return new ImportMessage().mergeFrom(this);
      }

      public ImportMessage mergeFrom(ImportMessage other) {
         if (other.hasD()) {
            setD(other.getD());
         }
         return this;
      }

      public int serializedSizeUnframed() {
         if (memoizedSerializedSize != -1)
            return memoizedSerializedSize;

         int size = 0;
         if (hasD()) {
            size += org.fusesource.hawtbuf.proto.CodedOutputStream.computeInt32Size(1, getD());
         }
         memoizedSerializedSize = size;
         return size;
      }

      public ImportMessage mergeUnframed(org.fusesource.hawtbuf.proto.CodedInputStream input) throws java.io.IOException {
         while (true) {
            int tag = input.readTag();
            if ((tag & 0x07) == 4) {
               return this;
            }
            switch (tag) {
            case 0:
               return this;
            default: {
               break;
            }
            case 8:
               setD(input.readInt32());
               break;
            }
         }
      }
      public void writeUnframed(org.fusesource.hawtbuf.proto.CodedOutputStream output) throws java.io.IOException {
         if (hasD()) {
            output.writeInt32(1, getD());
         }
      }

      public static ImportMessage parseUnframed(org.fusesource.hawtbuf.proto.CodedInputStream data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException, java.io.IOException {
         return new ImportMessage().mergeUnframed(data).checktInitialized();
      }

      public static ImportMessage parseUnframed(org.fusesource.hawtbuf.Buffer data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException {
         return new ImportMessage().mergeUnframed(data).checktInitialized();
      }

      public static ImportMessage parseUnframed(byte[] data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException {
         return new ImportMessage().mergeUnframed(data).checktInitialized();
      }

      public static ImportMessage parseUnframed(java.io.InputStream data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException, java.io.IOException {
         return new ImportMessage().mergeUnframed(data).checktInitialized();
      }

      public static ImportMessage parseFramed(org.fusesource.hawtbuf.proto.CodedInputStream data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException, java.io.IOException {
         return new ImportMessage().mergeFramed(data).checktInitialized();
      }

      public static ImportMessage parseFramed(org.fusesource.hawtbuf.Buffer data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException {
         return new ImportMessage().mergeFramed(data).checktInitialized();
      }

      public static ImportMessage parseFramed(byte[] data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException {
         return new ImportMessage().mergeFramed(data).checktInitialized();
      }

      public static ImportMessage parseFramed(java.io.InputStream data) throws org.fusesource.hawtbuf.proto.InvalidProtocolBufferException, java.io.IOException {
         return new ImportMessage().mergeFramed(data).checktInitialized();
      }

      public String toString() {
         return toString(new java.lang.StringBuilder(), "").toString();
      }

      public java.lang.StringBuilder toString(java.lang.StringBuilder sb, String prefix) {
         if(  hasD() ) {
            sb.append(prefix+"d: ");
            sb.append(getD());
            sb.append("\n");
         }
         return sb;
      }

      public boolean equals(Object obj) {
         if( obj==this )
            return true;
         
         if( obj==null || obj.getClass()!=ImportMessage.class )
            return false;
         
         return equals((ImportMessage)obj);
      }
      
      public boolean equals(ImportMessage obj) {
         if (hasD() ^ obj.hasD() ) 
            return false;
         if (hasD() && ( getD()!=obj.getD() ))
            return false;
         return true;
      }
      
      public int hashCode() {
         int rc=244048002;
         if (hasD()) {
            rc ^= ( 68^getD() );
         }
         return rc;
      }
      
   }

   static abstract class ImportMessageBase<T> extends org.fusesource.hawtbuf.proto.BaseMessage<T> {

      // optional int32 d = 1;
      private int f_d = 0;
      private boolean b_d;

      public boolean hasD() {
         return this.b_d;
      }

      public int getD() {
         return this.f_d;
      }

      public T setD(int d) {
         loadAndClear();
         this.b_d = true;
         this.f_d = d;
         return (T)this;
      }

      public void clearD() {
         loadAndClear();
         this.b_d = false;
         this.f_d = 0;
      }

   }

}
